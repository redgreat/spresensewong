/**
 * 绘制加速度历史记录界面
 */
void gnss_draw_acceleration_history(int selected_index)
{
  u8g2_t* u8g2 = get_display();
  
  u8g2_ClearBuffer(u8g2);
  
  // 标题
  u8g2_SetFont(u8g2, u8g2_font_6x12_tr);
  u8g2_DrawStr(u8g2, 15, 8, "加速度历史记录");
  u8g2_DrawHLine(u8g2, 0, 10, 128);
  
  // 获取加速度历史数据
  int count = gnss_get_acceleration_history_count();
  
  if (count == 0) {
    // 没有历史数据
    u8g2_DrawStr(u8g2, 10, 35, "无加速度历史记录");
    u8g2_DrawStr(u8g2, 10, 50, "在行驶时自动记录");
    u8g2_SendBuffer(u8g2);
    return;
  }
  
  // 确保选择索引合法
  if (selected_index >= count) {
    selected_index = count - 1;
  }
  
  // 获取当前选中的加速度数据
  const AccelerationData* data = gnss_get_acceleration_data(selected_index);
  if (!data) {
    u8g2_DrawStr(u8g2, 10, 35, "读取数据失败");
    u8g2_SendBuffer(u8g2);
    return;
  }
  
  // 索引和日期
  char title[32];
  snprintf(title, sizeof(title), "记录 %d/%d - %s", 
           selected_index + 1, count, data->date_time_str);
  u8g2_DrawStr(u8g2, 0, 22, title);
  
  // 主要数据
  u8g2_SetFont(u8g2, u8g2_font_5x8_tr);
  
  // 0-30km/h 加速时间
  char time_0_30[20];
  if (data->time_0_30 >= 0) {
    snprintf(time_0_30, sizeof(time_0_30), "%.2f秒", data->time_0_30);
  } else {
    strcpy(time_0_30, "未达到");
  }
  u8g2_DrawStr(u8g2, 0, 34, "0-30km/h:");
  u8g2_DrawStr(u8g2, 70, 34, time_0_30);
  
  // 0-50km/h 加速时间
  char time_0_50[20];
  if (data->time_0_50 >= 0) {
    snprintf(time_0_50, sizeof(time_0_50), "%.2f秒", data->time_0_50);
  } else {
    strcpy(time_0_50, "未达到");
  }
  u8g2_DrawStr(u8g2, 0, 44, "0-50km/h:");
  u8g2_DrawStr(u8g2, 70, 44, time_0_50);
  
  // 最大速度
  char max_speed[16];
  snprintf(max_speed, sizeof(max_speed), "%.1f km/h", data->max_speed_reached);
  u8g2_DrawStr(u8g2, 0, 54, "最大速度:");
  u8g2_DrawStr(u8g2, 70, 54, max_speed);
  
  u8g2_SendBuffer(u8g2);
}
